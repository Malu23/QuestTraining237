## LIST FUNCTIONS

1. Add()
   Adds an object to the end of the list.
   Example:
   List<int> numbers = new List<int>();
   numbers.Add(1);  // List: [1]

2. AddRange()
   Adds elements of a collection to the end of the list.
   Example:
   numbers.AddRange(new int[] {2, 3});  // List: [1, 2, 3]

3. Clear()
   Removes all elements from the list.
   Example:
   numbers.Clear();  // List: []

4. Contains()
   Checks if a specific element exists in the list.
   Example:
   bool hasOne = numbers.Contains(1);  // false

5. Count //property
   Returns the number of elements in the list.
   Example:
   int count = numbers.Count;  // 0

6. Find()
   Returns the first element that matches the condition.
   Example:
   int found = numbers.Find(x => x > 1);  // 2

7. FindAll()
   Returns all elements that match the condition.
   Example:
   List<int> result = numbers.FindAll(x => x > 1);  // [2, 3]

8. FindIndex()
   Returns the index of the first matching element.
   Example:
   int index = numbers.FindIndex(x => x > 1);  // 1

9. Insert()
   Inserts an element at the specified index.
   Example:
   numbers.Insert(1, 10);  // List: [1, 10, 2, 3]

10. Remove()
    Removes the first occurrence of a specific element.
    Example:
    numbers.Remove(10);  // List: [1, 2, 3]

11. RemoveAt()
    Removes an element at the specified index.
    Example:
    numbers.RemoveAt(1);  // List: [1, 3]

12. Sort()
    Sorts the elements in the list.
    Example:
    numbers.Sort();  // List: [1, 3]

13. Reverse()
    Reverses the order of elements in the list.
    Example:
    numbers.Reverse();  // List: [3, 1]

14. IndexOf()
    Returns the index of the first occurrence of an element.
    Example:
    int index = numbers.IndexOf(1);  // 1

15. LastIndexOf()
    Returns the index of the last occurrence of an element.
    Example:
    int index = numbers.LastIndexOf(1);  // 1

16. ToArray()
    Copies the elements to a new array.
    Example:
    int[] array = numbers.ToArray();  // [3, 1]

17. GetRange()
    Returns a range of elements from the list.
    Example:
    List<int> sublist = numbers.GetRange(0, 2);  // [3, 1]

18. ForEach()
    Performs the specified action on each element.
    Example:
    numbers.ForEach(x => Console.WriteLine(x));  // 3, 1

19. Exists()
    Determines if any element matches a condition.
    Example:
    bool exists = numbers.Exists(x => x == 3);  // true

20. RemoveAll()
    Removes all elements that match a condition.
    Example:
    numbers.RemoveAll(x => x > 1);  // List: [1]
